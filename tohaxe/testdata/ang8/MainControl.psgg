;PSGG Editor Backup File
version=1.1
file=MainControl.xlsx
guid=da6e7724-0f57-4388-8605-dee6b238dfc1
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=no

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n003,n004,n019,n005,,n006,,n007,,n008,n009,n00a,n00b,,n00c,n00d,,n00e,n00f,,n010,n011,,n012,n013,n014,n015,,n01a,n01b,n01c,n01d,n016,n017,n018,,
stateid_list=,,,,s0001,s0002,s0005,s0006,s0007,s0004,s0009,s0008,s000a,s000b,s000d,s000c,s000f,s000e,s0010,s0011,s0012,s0013,s0014,s0015,s0017,s0016
max_name_id=29
max_state_id=23
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=nextstate
n006=embed
n007=members
n008=vars
n009=init
n00a=init-cmt
n00b=init-ref
n00c=update
n00d=update-cmt
n00e=wait
n00f=wait-cmt
n010=post_wait
n011=post_wait-cmt
n012=branch
n013=branch-cmt
n014=brcond
n015=nowait
n016=!dir
n017=!pos
n018=!uuid
n019=state-typ
n01a=gosubstate
n01b=loop_init
n01c=loop_cond
n01d=loop_next


[id_state_dic]
s0001=S_START
s0002=S_END
s0004=S_BUTTONS
s0005=S_TEST0001
s0006=S_TEST0002
s0007=S_TEST0003
s0008=S_TEST0004
s0009=S_TEST0005
s000a=S_TEST0006
s000b=S_TEST0011
s000c=S_SUBSTART1
s000d=S_ALERT
s000e=S_RETURN1
s000f=S_LOOP1
s0010=S_SUBSTART2
s0011=S_RETURN2
s0012=S_ALERT1
s0013=S_TEST0007
s0014=S_BACKTO_BUTTON
s0015=S_TEST0008
s0016=S_TEST0009
s0017=S_TEST0010


[s0001]
n002=S_START
n019=start
n005=S_BUTTONS
n017=21,72
n018=100001

[s0002]
n002=S_END
n019=end
n017=282,38
n018=100002

[s0004]
n002=S_BUTTONS
n003=ボタン分岐
n012=@@@
brifc(S_TEST0001);
brelseifc(S_TEST0002);
brelseifc(S_TEST0003);
brelseifc(S_TEST0004);
brelseifc(S_TEST0005);
brelseifc(S_TEST0006);
brelseifc(S_TEST0007);
brelseifc(S_TEST0008);
brelseifc(S_TEST0009);
brelseifc(S_TEST0010);
brelseifc(S_TEST0011);
brelseif(S_LOOP1);
@@@

n013=@@@
test 1
test 2
test 3
test 4
test 5
test 6
test 7
test 8
test 9
test 10
test 11
test 12
@@@

n014=@@@
this.sp.curEvent === 'test_1'
this.sp.curEvent === 'test_2'
this.sp.curEvent === 'test_3'
this.sp.curEvent === 'test_4'
this.sp.curEvent === 'test_5'
this.sp.curEvent === 'test_6'
this.sp.curEvent === 'test_7'
this.sp.curEvent === 'test_8'
this.sp.curEvent === 'test_9'
this.sp.curEvent === 'test_10'
this.sp.curEvent === 'test_11'
this.sp.curEvent === 'test_12'
@@@

n016=@@@
/
(100,100)

@@@

n017=138,636
n018=100003

[s0005]
n002=S_TEST0001
n003=
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test001 program');
const app = this.sp.appComponent;
const el = app.el;
const rend = app.rend;

const target = el.nativeElement;
rend.setStyle(target, 'color', 'red');
rend.listen(target, 'click', () => alert('ok'));
@@@

n016=@@@
/
(0,0)
This is the root
@@@

n017=610,61
n018=100004

[s0006]
n002=S_TEST0002
n003=
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test002 program');
const app = this.sp.appComponent;
const el = app.el;
const rend = app.rend;

const div = rend.createElement('div');
const text = rend.createText('Hello world!');

rend.appendChild(div, text);
rend.appendChild(el.nativeElement, div);

@@@

n016=@@@
/
(0,0)
This is the root
@@@

n017=613,176
n018=100005

[s0007]
n002=S_TEST0003
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test003 program');
const app = this.sp.appComponent;
const el = app.el;
const rend = app.rend;

const target = document.getElementById('hoge');
const span = rend.createElement('span');
const text = rend.createText('Insert text by id');
if (target != null) {
    rend.appendChild(span, text);
    rend.appendChild(target, span);
}

@@@

n016=@@@
/
(100,100)

@@@

n017=615,301
n018=100006

[s0008]
n002=S_TEST0004
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test004 program');
const app = this.sp.appComponent;
const el = app.el;
const rend = app.rend;

const parent = document.getElementById('hoge');
if (parent != null && parent.firstChild != null) {
    rend.removeChild(parent, parent.firstChild);
}

@@@

n016=@@@
/
(0,0)

@@@

n017=615,421
n018=100007

[s0009]
n002=S_TEST0005
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test005 program');
const app = this.sp.appComponent;
const el = app.el;
const rend = app.rend;

const img = rend.createElement('img');

rend.setAttribute(img, 'src'  , app.hertimg);
rend.setAttribute(img, 'width', '100px');
rend.appendChild(el.nativeElement, img);

@@@

n016=@@@
/
(0,0)

@@@

n017=624,535
n018=100008

[s000a]
n002=S_TEST0006
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test006 program');
const sc = new Sub001Control();
sc.start();
sc.SetupSp(this.sp);
this.sp.addStateManager(sc);

@@@

n016=@@@
/
(0,0)

@@@

n017=623,644
n018=100009

[s000b]
n002=S_TEST0011
n003=サブルーチン
n019=gosub
n005=S_BUTTONS
n01a=S_SUBSTART1
n016=@@@
/
(100,100)

@@@

n017=681,1415
n018=100011

[s000c]
n002=S_SUBSTART1
n003=A Subroutine Start
n019=substart
n005=S_ALERT
n016=@@@
/
(100,100)

@@@

n017=933,1487
n018=100012

[s000d]
n002=S_ALERT
n005=S_RETURN1
n009=alert(" Calling from subroutine.");
n016=@@@
/
(100,100)

@@@

n017=1143,1491
n018=100013

[s000e]
n002=S_RETURN1
n003=A Subroutine Return
n019=subreturn
n016=@@@
/
(100,100)

@@@

n017=1382,1489
n018=100014

[s000f]
n002=S_LOOP1
n003=５回ループ
n019=loop
n005=S_BUTTONS
n007=private m_count = 0;
n01a=S_SUBSTART2
n01b=this.m_count = 0;
n01c=this.m_count < 5
n01d=this.m_count++;
n016=@@@
/
(100,100)

@@@

n017=686,1559
n018=100015

[s0010]
n001=(bitmap)
n002=S_SUBSTART2
n003=A Subroutine Start
n019=substart
n005=S_ALERT1
n016=@@@
/
(100,100)

@@@

n017=947,1618
n018=100016

[s0011]
n002=S_RETURN2
n003=A Subroutine Return
n019=subreturn
n016=@@@
/
(0,0)

@@@

n017=1380,1632
n018=100017

[s0012]
n002=S_ALERT1
n005=S_RETURN2
n009=@@@
alert(" Calling from subroutine.\n Couny="+ this.m_count);
@@@

n016=@@@
/
(0,0)

@@@

n017=1165,1630
n018=100018

[s0013]
n002=S_TEST0007
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test007 program');
const app = this.sp.appComponent;

const el = app.el;
const rend = app.rend;
const canvas_el = rend.createElement('canvas');
rend.setAttribute(canvas_el, 'id', 'cv1');
rend.setAttribute(canvas_el, 'width',  '200px');
rend.setAttribute(canvas_el, 'height', '200px');
rend.setStyle(canvas_el, 'backgroundColor', '#ffffff00' );
rend.setStyle(canvas_el, 'position', 'absolute');
rend.setStyle(canvas_el, 'left',   '200px');
rend.setStyle(canvas_el, 'bottom', '200px');
rend.appendChild(el.nativeElement, canvas_el);

const ctx = (<HTMLCanvasElement>canvas_el).getContext('2d');
ctx.fillStyle = '#ff0000';
ctx.fillRect(0, 0, 80, 80);
ctx.fillStyle = '#000000';
ctx.beginPath();
ctx.arc(40, 40, 40, 0, (Math.PI * 2) * (3 / 4));
ctx.stroke();

@@@

n016=@@@
/
(100,100)

@@@

n017=631,748
n018=100019

[s0014]
n002=S_BACKTO_BUTTON
n005=S_BUTTONS
n016=@@@
/
(100,100)

@@@

n017=135,572
n018=100020

[s0015]
n002=S_TEST0008
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test008 program');
const sc = new Sub002Control();
sc.SetupSp(this.sp);
sc.start();
this.sp.addStateManager(sc);

@@@

n016=@@@
/
(100,100)

@@@

n017=635,854
n018=100021

[s0016]
n001=(bitmap)
n002=S_TEST0009
n003=
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test009 program');
const sc = new Sub003Control();
sc.SetupSp(this.sp);
sc.start();
this.sp.addStateManager(sc);
@@@

n016=@@@
/
(100,100)

@@@

n017=629,954
n018=100022

[s0017]
n001=(bitmap)
n002=S_TEST0010
n003=
n005=S_BACKTO_BUTTON
n009=@@@
console.log('test010 program');
const sc = new TdMainControl();
sc.SetupSp(this.sp);
sc.start();
this.sp.addStateManager(sc);

@@@

n016=@@@
/
(100,100)

@@@

n017=634,1077
n018=100023



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2019/11/07 17:14:39
; * pssgEditor version : 0.61.41640.84b9998d3ecb2076fe5ce5f3a9a5018d44637bf4
psggfile=@@@
MainControl.psgg
@@@
xlsfile=@@@
MainControl.xlsx
@@@
guid=@@@
da6e7724-0f57-4388-8605-dee6b238dfc1
@@@
bitmap_width=5000
bitmap_height=2000
c_statec_cmt=1
c_thumbnail=1
c_contents=1
force_display_outpin=0
last_action=@@@
Moved a state
@@@
target_pathdir=@@@
/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":"This is the root"}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":0,"y":0}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_START","Value":{"x":21,"y":72}},{"Key":"S_END","Value":{"x":282,"y":38}},{"Key":"S_BUTTONS","Value":{"x":138,"y":636}},{"Key":"S_TEST0001","Value":{"x":610,"y":61}},{"Key":"S_TEST0002","Value":{"x":613,"y":176}},{"Key":"S_TEST0003","Value":{"x":615,"y":301}},{"Key":"S_TEST0004","Value":{"x":615,"y":421}},{"Key":"S_TEST0005","Value":{"x":624,"y":535}},{"Key":"S_TEST0006","Value":{"x":623,"y":644}},{"Key":"S_TEST0011","Value":{"x":681,"y":1415}},{"Key":"S_SUBSTART1","Value":{"x":933,"y":1487}},{"Key":"S_TEST0007","Value":{"x":631,"y":748}},{"Key":"S_RETURN1","Value":{"x":1382,"y":1489}},{"Key":"S_LOOP1","Value":{"x":686,"y":1559}},{"Key":"S_SUBSTART2","Value":{"x":947,"y":1618}},{"Key":"S_RETURN2","Value":{"x":1380,"y":1632}},{"Key":"S_TEST0008","Value":{"x":635,"y":854}},{"Key":"S_ALERT","Value":{"x":1143,"y":1491}},{"Key":"S_ALERT1","Value":{"x":1165,"y":1630}},{"Key":"S_BACKTO_BUTTON","Value":{"x":135,"y":572}},{"Key":"S_TEST0009","Value":{"x":629,"y":954}},{"Key":"S_TEST0010","Value":{"x":634,"y":1077}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4285493103},"pattern":"BACKTO_"}]
@@@
use_external_command=0
external_command=@@@

@@@
source_editor=@@@
"%USERPROFILE%\AppData\Local\Programs\Microsoft VS Code\Code.exe" --goto %1:%2
@@@
source_editor_vs2015_support=0
label_show=0
label_text=@@@
test
@@@
option_delete_thisstring=1
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_editbranch_automode=1
option_omit_basestate_string=0
option_hide_basestate_contents=1
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=0
contents_font_size=0
state_width=140
state_height=20
comment_block_height=20
content_max_height=50
comment_block_fixed=0
line_space=-1
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@
[{"Key":"init","Value":{"height":829,"width":760}}]
@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
<<<?state/^C_/
eof>>>
<<<?state/^E_/
[[embed]]
eof>>>
/*
    [[state]]
    [[state-cmt]]
*/
<<<?state-typ/^start$/
[[state]](bFirst: boolean) : void {
    this.Goto(this.[[nextstate]]);
    this.NoWait();
}
eof>>>
<<<?state-typ/^end$/
[[state]](bFirst: boolean) : void {
}
eof>>>
<<<?state-typ/^gosub$/
[[state]](bFirst: boolean) : void {
    this.GoSubState(this.[[gosubstate]],this.[[nextstate]]);
    this.NoWait();
}
eof>>>
<<<?state-typ/^substart$/
[[state]](bFirst: boolean) : void {
    this.Goto(this.[[nextstate]]);
    this.NoWait();
}
eof>>>

<<<?state-typ/^subreturn$/
[[state]](bFirst: boolean) : void
{
    this.ReturnState();
    this.NoWait();
}
eof>>>

<<<?state-typ/^loop$/
[[members]]
[[state]](bFirst: boolean) : void {
    [[loop_init]]
    this.Goto(this.[[state]]_LoopCheckAndGosub____);
    this.NoWait();
}
[[state]]_LoopCheckAndGosub____(bFirst: boolean) : void {
    if ([[loop_cond]]) this.GoSubState(this.[[gosubstate]],this.[[state]]_LoopNext____);
    else               this.Goto(this.[[nextstate]]);
    this.NoWait();
}
[[state]]_LoopNext____(bFirst: boolean)  : void {
    [[loop_next]]
    this.Goto(this.[[state]]_LoopCheckAndGosub____);
    this.NoWait();
}
eof>>>


[[members]]
[[state]](bFirst: boolean) : void {

    [[vars]]

    if (bFirst) {

        this.curstatename = '[[state]]';
        // this.curstatecmt  = '[[state-cmt]]';

        [[init]]
    }

    [[update]]

    <<<?wait
    if ([[wait]]) { return; }
    >>>

    [[post_wait]]

    [[branch]]

    <<<?nextstate
    if (!this.HasNextState()) {
        this.Goto(this.[[nextstate]]);
    }
    >>>

    <<<?nowait
    this.NoWait();
    >>>

}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

psgg=MainControl.psgg
xls=MainControl.xlsx
sub_src=
gen_src=MainControl.ts

manager_src=
manager_dir=

template_src=
template_func=template-statefunc.txt

help=help.ini
helpweb=starterkit\angular\helpweb.html


[setupinfo]

starterkit=@@@
https://github.com/NNNIC/psgg-starter-kit.git GIT-COMMIT-HASH
@@@



lang=typescript
framework=angular

statemachine=MainControl

prefix=__PREFIX__
xlsdir=@@@
C:\Users\gea01\Documents\psgg\samples\psgg-angular8-sample\sample\my-app\src\app\state\src
@@@

gendir=@@@
C:\Users\gea01\Documents\psgg\samples\psgg-angular8-sample\sample\my-app\src\app\state\src
@@@

genrdir=.
incrdir=.

code_output_start=[PSGG OUTPUT START]
code_output_end=[PSGG OUTPUT END]

; This section has macro defines for converting.

; commentline format  {%0} will be replaced to a comment.
[macro]

commentline=// {%0}

@branch=@@@
<<<?"{%0}"/^brifc{0,1}$/
if ([[brcond:{%N}]]) { this.Goto( this.{%1} ); }
>>>
<<<?"{%0}"/^brelseifc{0,1}$/
else if ([[brcond:{%N}]]) { this.Goto( this.{%1} ); }
>>>
<<<?"{%0}"/^brelse$/
else { this.Goto( this.{%1} ); }
>>>
<<<?"{%0}"/^br_/
this.{%0}(this.{%1});
>>>

@@@


[jpn]

title=Angular typescript  スタートキット  2019/9/22

detail=@@@
Angular typescript用のステートマシンを作成します。

※サンプルプロジェクトを次のＵＲＬより入手可能。
https://github.com/NNNIC/psgg-angular-sample

# ドキュメント用フォルダ
   ステート図ファイルとエディタ起動用ショートカットを格納

      C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\doc

  以下のファイルを作成します。

      MainControl.pssg     --- エディタで次のエクセルファイルを開く。
      MainControl.xlsx     ---  ステート図格納用Excelファイル。エディタが編集。

# ソース用フォルダ
　エディタが生成ソースファイル、ユーザ実装ソースファイル、及び管理クラスファイルを格納

      C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\my-app\src\app\statesrc

　以下のファイルを作成します。

      MainControl.ts       --- Excelファイルからの変換結果を挿入。

注意 : 既に同名のファイルがある場合は生成されません。
　　　 削除してから生成してください。

[2019/9/22]　マネージャクラスの廃止
ステートクラス内にステート管理関数を内包するように変更しました。
これによりデバッグ時のステート追跡が簡単になります。
複数のステートクラスを管理する場合は、インターフェースクラスを設定して利用下さい。

@@@


[en]

title=Angular typescript STARTER KIT 2019/9/22

detail=@@@
This dialog will create files for a state machine.

* You may get the sample project from the below url.
https://github.com/NNNIC/psgg-angular-sample

# Document Folder
      This folder will contain a state chart file and the shortcut of the editor.

      C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\doc

  File:

      MainControl.pssg  --- The editor opens the below excel file.
      MainControl.xlsx  --- Excel File. The editor edits this file

# Source Folder
       This folder will contain a source file generated by the editor, a user implemetation source file, and a manager source file.

      C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\my-app\src\app\statesrc

　File:

      MainControl.ts       -- The editor will convert from the excel file into this file.

NOTE : If the same name files exists, the file will not be created.
       Please delete the same name files ahead of the creation.

[9/22/2019] Abolition of manager class
Changed to include state management functions in the state class.
This simplifies state tracking during debugging.
When managing multiple state classes, set an interface class.

@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###
[nextstate]

jpn=次に実行するステートを指定する。
en=Specify the next state to be executed.
[branch]

jpn=@@@
分岐処理を指定する。
１行に一つの分岐命令を書く。
GUIにより上書きされるため引数は適当に指定する。
例）
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

en=@@@
Specify branch functions.
Each line has a branch function.
Specify a tentavie parameter for each branch function because GUI overwrites the parameter.
i.e)
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

[update]

jpn=更新処理を指定する。
en=Specify a update process.
[wait]

jpn=@@@
待ち条件を指定する。
true時にループを解除する。
@@@

en=@@@
Specify a waiting condition.
Release the loop if the condition is true.
@@@

[loop_next]

en=Loop next value
jpn=ループ再初期化
[state]

jpn=@@@
ステート名を指定する。
英文字、数字、アンダーバーで構成される。
先頭は英文字およびアンダーバー。
@@@

en=@@@
Specify a state name.
The state name consits of alphabet, number and underbar except that the head characther should be alphabet or a underbar.
@@@

[post_wait]

jpn='wait'後の処理を指定する。
en=Specify the post process after 'wait'.
[nowait]

jpn=@@@
次のステートへ同期待ちをせず実行する時に 'nowait'等を指定する。
同期待ち時には何も指定しない。
@@@

en=@@@
Specify 'nowait' and so on if the next state will be execute without a sync wait.
Do not specify any word wheh the next state will be execute with a sync wait.
@@@

[!uuid]

jpn=システムがステートのuuid指定に使用。
en=@@@
System uses this for the uuid of the state.
@@@

[init]

jpn=初期化用処理を指定する。
en=Specify a initial process.
[!dir]

jpn=システムがステートのディレクトリ指定に使用。
en=@@@
System uses this for the directory path of the state.
@@@

[loop_init]

en=Loop Initialization
jpn=ループ初期化
[thumbnail]

jpn=説明用のイメージを指定する。
en=@@@
Specify a image for explanation of this state.
@@@

[loop_cond]

en=Loop Condition
jpn=ループ条件
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###
[inpmethod]

init=
branch-cmt=
state-ref=
wait=
wait-cmt=
embed=
gosubstate=
loop_cond=
branch=
!dir=
post_wait-cmt=
nowait=@@@
*select
nowait
@@@

members=
thumbnail=
update-cmt=
post_wait=
state-cmt=
state-typ=
!pos=
!uuid=
nextstate=
state=
S_=
brcond=
update=
init-cmt=
loop_next=
vars=
C_=
E_=
init-ref=
loop_init=
[stateloc]

E_=S1
S_=S0
C_=S2
[itemcond]

state-typ=read_only,exclusion,(S0)
gosubstate=read_only,exclusion,(S0)
branch=read_only,exclusion,S0
state=read_only,share,S.+
nextstate=read_only,exclusion,S0
return=read_only,exclusion,S0
brcond=read_only,exclusion,S0
embed=read_only,exclusion,S1
basestate=read_only,share,S.+
thumbnail=read_only,share,S.+
###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------


