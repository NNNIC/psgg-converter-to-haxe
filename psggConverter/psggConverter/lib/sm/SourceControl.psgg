;PSGG Editor Backup File
version=1.1
file=SourceControl.xlsx
guid=175debba-7295-43cf-97b6-5a0e6402b4c8
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=no

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n003,n004,n005,,n006,n007,n008,n009,,n00a,n00b,,n00c,n00d,,n00e,n00f,,n010,n011,,n012,n013,n014
stateid_list=,,,,s0001,s0002,s0003,s0004,s0005,s0006,s0007,s0008,s0009,s000a,s000b,s000c,s000d,s000e,s000f,s0010,s0011,s0012,s0013,s0014,s0015,s0016,s0017,s0018,s0019,s001a,s001b,s001c,s001d,s001e,s001f,,s0020,s0021,s0022,s0023,,,,,,,,s0024
max_name_id=20
max_state_id=36
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=nextstate
n006=embed
n007=init
n008=init-cmt
n009=init-ref
n00a=update
n00b=update-cmt
n00c=wait
n00d=wait-cmt
n00e=post_wait
n00f=post_wait-cmt
n010=branch
n011=nowait
n012=!dir
n013=!pos
n014=!uuid


[id_state_dic]
s0001=S_START
s0002=S_END
s0003=S_LOADSETTING
s0004=S_SETLANG
s0005=S_WRITEHEDDER
s0006=S_CREATESOURCE
s0007=S_WRITEFILE
s0008=S_CONTENTS_1
s0009=S_CONTENTS_2
s000a=S_GETLINE_LC
s000b=S_SETUP_LC
s000c=S_CHECKCOUNT_LC
s000d=S_IS_CONTENTS_1_LC
s000e=S_IS_CONTENTS_2_LC
s000f=S_IS_INCLUDE_LC
s0010=S_IS_MACRO_LC
s0011=S_NEXT_LC
s0012=S_ADDLINE_LC
s0013=S_IS_END_LC
s0014=S_SETUP2_LC
s0015=S_IS_COMMENT
s0016=S_LINESTOBUF_LC
s0017=S_ESCAPE_TO_CHAR
s0018=S_BIND_SRC
s0019=S_SET_CHECKAGAIN
s001a=S_CHECK_AGAIN
s001b=S_CHECKMODE
s001c=S_IS_REGEX_LC
s001d=S_IS_REGEX2_LC
s001e=S_USE_G_TEMPLSRC
s001f=S_USE_INSERT_TEMP
s0020=S_OUTPUTCHECK
s0021=S_OUTPUT_INSERTBUF
s0022=E_OPTIONS
s0023=E_OPTIONS1
s0024=S_IS_PREFIX


[s0001]
n002=S_START
n005=S_CHECKMODE
n012=@@@
/
(100,100)
The root
@@@

n013=38,469
n014=100001

[s0002]
n002=S_END
n012=@@@
/
(100,100)
The root
@@@

n013=1693,494
n014=100002

[s0003]
n001=(bitmap)
n002=S_LOADSETTING
n003=設定読込み
n007=load_setting();
n00e=need_check_again();
n010=@@@
br_YES(S_LOADSETTING);
br_NO(S_SETLANG);
@@@

n012=@@@
/
(100,100)
The root
@@@

n013=623,237
n014=100003

[s0004]
n001=(bitmap)
n002=S_SETLANG
n003=言語設定
n005=S_END
n007=set_lang();
n012=@@@
/
(100,100)
The root
@@@

n013=980,346
n014=100004

[s0005]
n001=(bitmap)
n002=S_WRITEHEDDER
n003=ヘッダ―記入
n005=S_CREATESOURCE
n007=write_header();
n012=@@@
/
(100,100)
The root
@@@

n013=489,747
n014=100005

[s0006]
n001=(bitmap)
n002=S_CREATESOURCE
n003=ソース生成スタート
n005=S_CONTENTS_1
n012=@@@
/CreateSource/
(713,750)
ソース生成
@@@

n013=38,202
n014=100006

[s0007]
n001=(bitmap)
n002=S_WRITEFILE
n003=ファイル書込み
n005=S_END
n007=write_file();
n012=@@@
/
(100,100)
The root
@@@

n013=1357,757
n014=100007

[s0008]
n001=(bitmap)
n002=S_CONTENTS_1
n003=@@@
コンテンツ①の作成
コンテンツ①は、カンマ区切りのステートリスト

@@@

n005=S_CONTENTS_2
n007=create_contents1();
n012=@@@
/CreateSource/
(713,750)
ソース生成
@@@

n013=186,373
n014=100008

[s0009]
n001=(bitmap)
n002=S_CONTENTS_2
n003=@@@
コンテンツ②の作成
コンテンツ②は全ステートを関数テンプレートにて展開
@@@

n005=S_SETUP_LC
n007=create_contents2();
n012=@@@
/CreateSource/
(713,750)
ソース生成
@@@

n013=397,376
n014=100010

[s000a]
n001=(bitmap)
n002=S_GETLINE_LC
n003=一行取得
n005=S_IS_END_LC
n007=getline_lc();
n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=160,470
n014=100013

[s000b]
n001=(bitmap)
n002=S_SETUP_LC
n003=チェックモード
n010=@@@
br_CVT(S_USE_G_TEMPLSRC);
br_INSERT(S_USE_INSERT_TEMP);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=45,182
n014=100011

[s000c]
n001=(bitmap)
n002=S_CHECKCOUNT_LC
n003=行変換のカウンタ確認
n007=checkcount_lc();
n010=@@@
br_OK(S_GETLINE_LC);
br_NG(S_LINESTOBUF_LC);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=620,32
n014=100012

[s000d]
n001=(bitmap)
n002=S_IS_CONTENTS_1_LC
n003=コンテンツ①確認
n007=is_contents_1_lc();
n010=@@@
br_CONTINUE(S_NEXT_LC);
br_NOTABOVE(S_IS_CONTENTS_2_LC);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=832,747
n014=100015

[s000e]
n001=(bitmap)
n002=S_IS_CONTENTS_2_LC
n003=コンテンツ②確認
n007=is_contents_2_lc();
n010=@@@
br_CONTINUE(S_NEXT_LC);
br_NOTABOVE(S_IS_REGEX_LC);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=1069,867
n014=100016

[s000f]
n001=(bitmap)
n002=S_IS_INCLUDE_LC
n003=インクルード確認
n007=is_include_lc();
n010=@@@
br_CONTINUE(S_SET_CHECKAGAIN);
br_NOTABOVE(S_IS_MACRO_LC);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=1942,1288
n014=100017

[s0010]
n001=(bitmap)
n002=S_IS_MACRO_LC
n003=マクロ確認
n007=is_macro_lc();
n010=@@@
br_CONTINUE(S_SET_CHECKAGAIN);
br_NOTABOVE(S_ADDLINE_LC);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=2157,1295
n014=100018

[s0011]
n001=(bitmap)
n002=S_NEXT_LC
n003=ループＮＥＸＴ処理
n005=S_CHECKCOUNT_LC
n007=next_lc();
n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=1773,220
n014=100019

[s0012]
n001=(bitmap)
n002=S_ADDLINE_LC
n003=どれにも当てはまらない場合、ママ追加
n005=S_NEXT_LC
n007=add_line_lc();
n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=2129,808
n014=100020

[s0013]
n001=(bitmap)
n002=S_IS_END_LC
n003=@@@
:endを確認
以後、":"を行要素とみなす。
@@@

n007=is_end_lc();
n010=@@@
br_CONTINUE(S_NEXT_LC);
br_NOTABOVE(S_IS_COMMENT);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=390,511
n014=100014

[s0014]
n001=(bitmap)
n002=S_SETUP2_LC
n003=バッファを行に分割
n005=S_CHECKCOUNT_LC
n007=setup_split_lc();
n008=バッファを行に分割
n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=449,147
n014=100022

[s0015]
n001=(bitmap)
n002=S_IS_COMMENT
n003=@@@
コメントの確認
但し、:end以後の場合はコードとして扱う
@@@

n007=is_comment();
n010=@@@
br_CONTINUE(S_NEXT_LC);
br_NOTABOVE(S_IS_CONTENTS_1_LC);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=603,633
n014=100023

[s0016]
n001=(bitmap)
n002=S_LINESTOBUF_LC
n003=ラインリストをバッファに
n005=S_CHECK_AGAIN
n007=lines_to_buf();
n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=836,44
n014=100026

[s0017]
n001=(bitmap)
n002=S_ESCAPE_TO_CHAR
n003=エスケープ文字を変換
n005=S_OUTPUTCHECK
n007=@@@
if (m_cvthexchar)
{
    escape_to_char();
}
@@@

n012=@@@
/
(100,100)
The root
@@@

n013=915,751
n014=100025

[s0018]
n001=(bitmap)
n002=S_BIND_SRC
n003=SRCにバインド
n005=S_ESCAPE_TO_CHAR
n007=bind_src_lc();
n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=1279,36
n014=100027

[s0019]
n001=(bitmap)
n002=S_SET_CHECKAGAIN
n003=再変換要素がある可能性があるので、再チェック依頼
n005=S_NEXT_LC
n007=set_check_again();
n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=1801,586
n014=100028

[s001a]
n001=(bitmap)
n002=S_CHECK_AGAIN
n003=再確認必要か？
n007=check_again_lc();
n010=@@@
br_YES(S_SETUP2_LC);
br_NO(S_BIND_SRC);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=1043,42
n014=100021

[s001b]
n001=(bitmap)
n002=S_CHECKMODE
n003=@@@
選択
>初期化モード
>変換モード

@@@

n010=@@@
br_INIT(S_LOADSETTING);
br_CVT(S_WRITEHEDDER);
br_INSERT(S_WRITEHEDDER);
@@@

n012=@@@
/
(100,100)
The root
@@@

n013=246,448
n014=100030

[s001c]
n001=(bitmap)
n002=S_IS_REGEX_LC
n003=正規表現コンテンツ確認
n007=is_regex_contents_lc();
n010=@@@
br_CONTINUE(S_NEXT_LC);
br_NOTABOVE(S_IS_REGEX2_LC);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=1283,1003
n014=100032

[s001d]
n001=(bitmap)
n002=S_IS_REGEX2_LC
n003=正規表現コンテンツ確認②
n007=is_regex_contents2_lc();
n010=@@@
br_CONTINUE(S_NEXT_LC);
br_NOTABOVE(S_IS_PREFIX);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=1493,1144
n014=100033

[s001e]
n001=(bitmap)
n002=S_USE_G_TEMPLSRC
n003=@@@
行変換準備
lc = LineConvert
@@@

n005=S_SETUP2_LC
n007=setup_buffer_lc();
n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=259,79
n014=100034

[s001f]
n001=(bitmap)
n002=S_USE_INSERT_TEMP
n003=@@@
行変換準備
lc = LineConvert
@@@

n005=S_SETUP2_LC
n007=setup_buffer_lc_insert();
n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=252,228
n014=100035

[s0020]
n001=(bitmap)
n002=S_OUTPUTCHECK
n003=モード別に出力を変える
n010=@@@
br_CVT(S_WRITEFILE);
br_INSERT(S_OUTPUT_INSERTBUF);
@@@

n012=@@@
/
(100,100)
The root
@@@

n013=1119,759
n014=100037

[s0021]
n001=(bitmap)
n002=S_OUTPUT_INSERTBUF
n003=インサートバッファへ
n005=S_END
n007=write_insertbuf();
n012=@@@
/
(100,100)
The root
@@@

n013=1356,910
n014=100039

[s0022]
n001=(bitmap)
n002=E_OPTIONS
n006=public bool m_cvthexchar = false;
n012=@@@
/
(100,100)
The root
@@@

n013=119,257
n014=100041

[s0023]
n001=(bitmap)
n002=E_OPTIONS1
n003=インデント数
n006=public int m_indent;
n012=@@@
/
(100,100)

@@@

n013=119,327
n014=100043

[s0024]
n001=(bitmap)
n002=S_IS_PREFIX
n003=$prefix$確認
n007=is_prefix_lc();
n010=@@@
br_CONTINUE(S_SET_CHECKAGAIN);
br_NOTABOVE(S_IS_INCLUDE_LC);
@@@

n012=@@@
/CreateSource/LineConvert/
(635,382)
行変換
@@@

n013=1732,1277
n014=100031



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2020/08/26 21:22:09
; * pssgEditor version : 0.66.5030.be6b2a7a2f9e64d0160759469b371cf04a1c84a1
psggfile=@@@
SourceControl.psgg
@@@
xlsfile=@@@
SourceControl.xlsx
@@@
guid=@@@
175debba-7295-43cf-97b6-5a0e6402b4c8
@@@
bitmap_width=5000
bitmap_height=2000
c_statec_cmt=1
c_thumbnail=1
c_contents=1
force_display_outpin=0
last_action=@@@
init,Initilized
@@@
target_pathdir=@@@
/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":"The root"},{"Key":"\/CreateSource\/","Value":"ソース生成"},{"Key":"\/CreateSource\/LineConvert\/","Value":"行変換"}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":100,"y":100}},{"Key":"\/CreateSource\/","Value":{"x":713,"y":750}},{"Key":"\/CreateSource\/LineConvert\/","Value":{"x":635,"y":382}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_START","Value":{"x":38,"y":469}},{"Key":"S_END","Value":{"x":1693,"y":494}},{"Key":"S_LOADSETTING","Value":{"x":623,"y":237}},{"Key":"S_SETLANG","Value":{"x":980,"y":346}},{"Key":"S_WRITEHEDDER","Value":{"x":489,"y":747}},{"Key":"S_CREATESOURCE","Value":{"x":608,"y":185}},{"Key":"S_WRITEFILE","Value":{"x":1357,"y":757}},{"Key":"S_ESCAPE_TO_CHAR","Value":{"x":915,"y":751}},{"Key":"S_CHECKMODE","Value":{"x":246,"y":448}},{"Key":"S_OUTPUTCHECK","Value":{"x":1119,"y":759}},{"Key":"S_OUTPUT_INSERTBUF","Value":{"x":1356,"y":910}},{"Key":"E_OPTIONS","Value":{"x":119,"y":257}},{"Key":"E_OPTIONS1","Value":{"x":119,"y":327}},{"Key":"____altnative_state____CreateSource","Value":{"x":713,"y":750}}]},{"Key":"\/CreateSource\/","Value":[{"Key":"S_WRITEHEDDER","Value":{"x":19,"y":16}},{"Key":"S_CREATESOURCE","Value":{"x":38,"y":202}},{"Key":"S_WRITEFILE","Value":{"x":889.1764,"y":391.117676}},{"Key":"S_CONTENTS_2","Value":{"x":397,"y":376}},{"Key":"S_CONTENTS_1","Value":{"x":186,"y":373}},{"Key":"S_ESCAPE_TO_CHAR","Value":{"x":927.941162,"y":314.352966}}]},{"Key":"\/CreateSource\/LineConvert\/","Value":[{"Key":"S_CONTENTS_2","Value":{"x":45,"y":27}},{"Key":"S_WRITEFILE","Value":{"x":1068.88232,"y":241.9412}},{"Key":"S_SETUP_LC","Value":{"x":45,"y":182}},{"Key":"S_CHECKCOUNT_LC","Value":{"x":620,"y":32}},{"Key":"S_GETLINE_LC","Value":{"x":160,"y":470}},{"Key":"S_IS_END_LC","Value":{"x":390,"y":511}},{"Key":"S_IS_CONTENTS_1_LC","Value":{"x":832,"y":747}},{"Key":"S_IS_CONTENTS_2_LC","Value":{"x":1069,"y":867}},{"Key":"S_IS_INCLUDE_LC","Value":{"x":1942,"y":1288}},{"Key":"S_IS_MACRO_LC","Value":{"x":2157,"y":1295}},{"Key":"S_ADDLINE_LC","Value":{"x":2129,"y":808}},{"Key":"S_NEXT_LC","Value":{"x":1773,"y":220}},{"Key":"S_CHECK_AGAIN","Value":{"x":1043,"y":42}},{"Key":"S_SETUP2_LC","Value":{"x":449,"y":147}},{"Key":"S_IS_COMMENT","Value":{"x":603,"y":633}},{"Key":"S_ESCAPE_TO_CHAR","Value":{"x":1537.00012,"y":80.41182}},{"Key":"S_LINESTOBUF_LC","Value":{"x":836,"y":44}},{"Key":"S_BIND_SRC","Value":{"x":1279,"y":36}},{"Key":"S_SET_CHECKAGAIN","Value":{"x":1801,"y":586}},{"Key":"S_IS_PREFIX","Value":{"x":1732,"y":1277}},{"Key":"S_IS_REGEX_LC","Value":{"x":1283,"y":1003}},{"Key":"S_IS_REGEX2_LC","Value":{"x":1493,"y":1144}},{"Key":"S_USE_G_TEMPLSRC","Value":{"x":259,"y":79}},{"Key":"S_USE_INSERT_TEMP","Value":{"x":252,"y":228}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4282417280},"pattern":"br_CONTINUE"}]
@@@
use_external_command=0
external_command=@@@

@@@
source_editor_set=@@@

@@@
label_show=0
label_text=@@@
test
@@@
option_delete_thisstring=1
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_editbranch_automode=0
option_use_custom_prefix=0
option_omit_basestate_string=0
option_hide_basestate_contents=0
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=0
contents_font_size=0
state_width=140
state_height=20
state_short_width=50
state_short_height=20
comment_block_height=4
content_max_height=200
comment_block_fixed=0
line_space=-1
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@

@@@
decoimage_typ_name=@@@
sym
@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###
:output=SourceControl_created.cs
::tempfunc=template-func.txt
:enc=utf-8
::
namespace lib {
    public partial class SourceControl : StateManager {

        public void Start()
        {
            Goto(S_START);
        }

        $contents2$
    }
}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
/*
    [[state]]
    [[state-cmt]]
*/
<<<?state/^E_/
[[embed]]
eof>>>

void [[state]](bool bFirst)
{
    if (bFirst)
    {
        [[init]]
    }

    [[update]]

    <<<?wait
    if (![[wait]]) return;
    >>>

    [[post_wait]]

    [[branch]]

    <<<?nextstate
    if (!HasNextState())
    {
        SetNextState([[nextstate]]);
    }
    >>>

    if (HasNextState())
    {
        <<<?nowait
            NoWait();
        >>>

        GoNextState();
    }
}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

converter=psggConverterLib.dll

psgg=SourceControl.psgg
xls=SourceControl.xlsx
sub_src=SourceControl.cs
gen_src=SourceControl_created.cs

manager_src=StateManager.cs
manager_dir=base

template_src=template-source.txt
template_func=template-statefunc.txt

help=help.ini

[setupinfo]

lang=c#
framework=

prefix=Source
xlsdir=C:\Users\gea01\Documents\psgg\psgg-converter\psggConverter\psggConverterLib\sm
gendir=C:\Users\gea01\Documents\psgg\psgg-converter\psggConverter\psggConverterLib\sm
genrdir=.

[jpn]
title=C# サンプル 1

detail=@@@

C# 用のステートマシンを作成します。

# ドキュメント用フォルダ
   ステート図ファイルとEditor起動用ショートカットを格納

      C:\Users\gea01\Documents\psgg\psgg-converter\psggConverter\psggConverterLib\sm

  以下のファイルを作成します。

      SourceControl.pssg   --- PSSG Editorで次のエクセルファイルを開く。
      SourceControl.xlsx   --- ステート図格納用Excelファイル。PSSG Editorが編集。

# ソース用フォルダ
　PSSG Editorが生成ソースファイル、ユーザ実装ソースファイル、及び管理クラスファイルを格納

      C:\Users\gea01\Documents\psgg\psgg-converter\psggConverter\psggConverterLib\sm

  以下のファイルが作成されます。

      SourceControl_created.cs  --- Excelファイルからの変換ソースコード。変換プロセスの度に上書きされる。
                                        ※生成直後は関数なしのクラス定義のみ

     SourceControl.cs          --- ユーザ実装用　（ここにプログラムを書く！）
                                        ※生成直後は関数なしのクラス定義のみ

# 共通管理クラスファイル

　以下に作成されます。

      C:\Users\gea01\Documents\psgg\psgg-converter\psggConverter\psggConverterLib\sm/base/StateManager.cs

注意 : 既に同名のファイルがある場合は生成されません。
　　　 削除してから生成してください。

記 2018.7.7
@@@


[en]
title=C# Sample 1

detail=@@@
This dialog will create files for a state machine.

# Document Folder
　This folder will contain a state chart file and the shortcut of the editor.

      C:\Users\gea01\Documents\psgg\psgg-converter\psggConverter\psggConverterLib\sm

  File:

      SourceControl.pssg  --- PSSG Editor opens the below excel file.
      SourceControl.xlsx  --- Excel File that has a state chart. PSSG Editor edits this file.

# Source Folder
   This folder will contain a source file generated by PSSG Editor, a user implemetation source file, and a manager source file.

      C:\Users\gea01\Documents\psgg\psgg-converter\psggConverter\psggConverterLib\sm

　File:
      SourceControl_created.cs   -- PSSG Editor will convert from the excel file to this file. This file will overwriten whenever using the converting process of PSSG Editor.
                                        * The file has only a class define without methods immediately after this creation.

      SourceControl.cs　　　　　 -- For implementation. (You have to write program in this file!!)
                                        * The file has only class define without methods immediately after this creation.

# Common State Manager Class File

  File:

      C:\Users\gea01\Documents\psgg\psgg-converter\psggConverter\psggConverterLib\sm/base/StateManager.cs

NOTE : If the same name files exists, the file will not be created.
       Please delete the same name files ahead of the creation.


Wrote 2018.7.7
@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###
; -----
; 項目説明
; -----

[state]
jpn=@@@
ステート名を指定する。
英文字、数字、アンダーバーで構成される。
先頭は英文字およびアンダーバー。
@@@
en=@@@
Specify a state name.
The state name consits of alphabet, number and underbar except that the head characther should be alphabet or a underbar.
@@@

[thumbnail]
jpn=@@@
説明用のイメージを指定する。
@@@
en=@@@
Specify a image for explanation of this state.
@@@

[init]
jpn=@@@
初期化用処理を指定する。
@@@
en=@@@
Specify a initial process.
@@@

[update]
jpn=@@@
更新処理を指定する。
@@@
en=@@@
Specify a update process.
@@@

[wait]
jpn=@@@
待ち条件を指定する。
true時にループを解除する。
@@@
en=@@@
Specify a waiting condition.
Release the loop if the condition is true.
@@@

[post_wait]
jpn=@@@
'wait'後の処理を指定する。
@@@
en=@@@
Specify the post process after 'wait'.
@@@

[branch]
jpn=@@@
分岐処理を指定する。
１行に一つの分岐命令を書く。
GUIにより上書きされるため引数は適当に指定する。
例）
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@
en=@@@
Specify branch functions.
Each line has a branch function.
Specify a tentavie parameter for each branch function because GUI overwrites the parameter.
i.e)
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

[nextstate]
jpn=@@@
次に実行するステートを指定する。
@@@
en=@@@
Specify the next state to be executed.
@@@

[nowait]
jpn=@@@
次のステートへ同期待ちをせず実行する時に 'yes'を指定する。
同期待ち時には何も指定しない。
@@@
en=@@@
Specify 'yes' if the next state will be execute without a sync wait.
Do not specify any word wheh the next state will be execute with a sync wait.
@@@

[!dir]
jpn=@@@
システムがステートのディレクトリ指定に使用。
@@@
en=@@@
System uses this for the directory path of the state.
@@@

[!uuid]
jpn=@@@
システムがステートのuuid指定に使用。
@@@
en=@@@
System uses this for the uuid of the state.
@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###
[inpmethod]

nextstate=
wait-cmt=
!pos=
update=
state=
S_=
init-ref=
E_=
init-cmt=
post_wait-cmt=
branch=
state-ref=
update-cmt=
post_wait=
C_=
embed=
!uuid=
init=
!dir=
wait=
nowait=
thumbnail=
state-cmt=
[stateloc]

E_=S1
S_=S0
C_=S2
[itemcond]

thumbnail=read_only,share,S.+
gosubstate=read_only,exclusion,S0
branch=read_only,exclusion,S0
state=read_only,share,S.+
nextstate=read_only,exclusion,S0
return=read_only,exclusion,S0
basestate=read_only,share,S.+
brcond=read_only,exclusion,S0
embed=read_only,exclusion,(S1)
###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------


